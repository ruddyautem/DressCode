name: Deploy dresscode to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy dresscode to VPS
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Deploy to VPS with safe exclusions
      - name: Deploy to VPS
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USER }}
          SOURCE: "."
          TARGET: "/home/autem-dresscode/htdocs/dresscode.autem.dev/"
          EXCLUDE: >
            .git/,
            .github/,
            node_modules/,
            .next/,
            .env*,
            *.log,
            .vscode/,
            README.md,
            pm2.config.cjs,
            ecosystem.config.js

      # 3. Build Next.js app & reload PM2 on VPS
      - name: Build and Restart PM2 on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/autem-dresscode/htdocs/dresscode.autem.dev
            
            # Install dependencies
            bun install --production
            
            # Build Next.js app
            bun run build
            
            # Create PM2 config if missing
            if [ ! -f "pm2.config.cjs" ]; then
              echo "Creating pm2.config.cjs..."
              cat > pm2.config.cjs << 'EOF'
            module.exports = {
              apps: [
                {
                  name: 'dresscode',
                  script: 'bun',
                  args: 'run start',
                  cwd: '/home/autem-dresscode/htdocs/dresscode.autem.dev',
                  env: {
                    NODE_ENV: 'production',
                    PORT: 3004,
                  },
                  exec_mode: 'fork',
                },
              ],
            };
            EOF
            fi
            
            # Start or reload PM2 app
            if pm2 list | grep -q "dresscode"; then
              echo "Reloading PM2 app..."
              pm2 reload pm2.config.cjs --update-env
            else
              echo "Starting PM2 app..."
              pm2 start pm2.config.cjs
            fi
            
            # Save PM2 configuration and show status
            pm2 save
            pm2 status
            
            # Show recent logs WITHOUT tailing (fixed)
            echo "=== Recent Error Logs ==="
            pm2 logs dresscode --err --lines 5 --nostream
            echo "=== Recent Output Logs ==="
            pm2 logs dresscode --out --lines 5 --nostream
            
            # Final verification
            echo "=== Deployment Complete ==="
            curl -s -o /dev/null -w "HTTP Status: %{http_code}\n" http://localhost:3004 || echo "App might still be starting..."
